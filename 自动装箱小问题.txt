==：
  比较基本类型时，比较的是值
  比较对象时，比较的是地址
对象的值比较用equals
自动装箱机制，在byte-128到127之间，如果存在一个数，
再创建相同的值的时候就不会重新创建，而是引用原来的那个
但是在范围之外的还是会新建对象
Integer i1=100;
Integer  i1=100;
Integer i3=188;
Inreger  i4=188;
i1==i2(true).i3==i4(false)
//因为i3,i4超过了范围，就要新建一个对象，而==在
//对象之间是比较地址，所以不相等

自动拆箱机制：基本数据类型和对象比较时，对象会自动
拆箱为基本数据类型再比较，比较的就是值而不是地址
Integer i1=new Integer(128);
int i2=128;
i1==i2(true)
//对象i1经过拆箱先变为int i1=128;再比较值

Integer i1=128;
Integer i2=new Integer(128);
i1==i2(false)
//不会经历拆箱过程，i1指向常量池，i2指向堆，内存地址不同

Integer i1=new Integer(128);
Integer i1=new Integer(128);
i1==i2(false)
//两个都是new，两个对象间的比较，比较的是地址，

Inreger i1=127;
Inreger i2=127;
i1==i2(true);
//没有超过范围，不用创建新对象

Inreger i1=128；
Inreger i2=128；
i1==i2(false)
//超过范围，创建新对象，比较地址，
















